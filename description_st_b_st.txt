1- before I found a project on the Kaggle and make a repo in github
2-git clone repo to the new folder
3-in the READMY make aproximate structure my project
4- downlowded a data to the folder "Data"
5- wget -qO- https://astral.sh/uv/install.sh | sh
6- source $HOME/.local/bin/env
7- uv --version # check if uv installed uv 0.8.23uv sync
8- nano pyproject.toml # basic configuration, which defines a minimal see pyproject.toml
9- uv sync # read pyproject.toml and install dependencies, lybreries
10- source .venv/bin/activate # activate virtual environment

–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è **Ruff** - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ –ª–∏–Ω—Ç–µ—Ä–∞ –¥–ª—è Python, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Å–æ–±–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (flake8, isort, autoflake –∏ –¥—Ä—É–≥–∏–µ).

### üõ†Ô∏è –†–∞–∑–±–µ—Ä–µ–º –∫–∞–∂–¥—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É:

**`line-length = 100`**
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞ = 100 —Å–∏–º–≤–æ–ª–æ–≤
- Ruff –±—É–¥–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å –æ –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö

**`select = ["E", "W", "F", "I", "UP", "ANN"]`**
–í–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã –ø—Ä–∞–≤–∏–ª:
- **`"E"`, `"W"`** - –æ—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–∑ pycodestyle (PEP 8)
- **`"F"`** - Pyflakes (–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫)
- **`"I"`** - isort (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤)
- **`"UP"`** - pyupgrade (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –¥–æ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π Python)
- **`"ANN"`** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π —Ç–∏–ø–æ–≤ (—Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –æ—Å–≤–æ–∏—Ç—å!)

**`ignore = ["F401"]`**
- –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª–æ F401 ("module imported but unused")
- –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ –≤ `__init__.py` —Ñ–∞–π–ª–∞—Ö, –≥–¥–µ –∏–º–ø–æ—Ä—Ç—ã —á–∞—Å—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é

**`[tool.ruff.lint]` —Å `ann-ignore = false`**
- –í–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π —Ç–∏–ø–æ–≤
- Ruff –±—É–¥–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

### üéØ –ß—Ç–æ —ç—Ç–æ –¥–∞–µ—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ:

–ö–æ–≥–¥–∞ –≤—ã –Ω–∞–ø–∏—à–µ—Ç–µ –∫–æ–¥ –±–µ–∑ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π:
```python
# –ë—É–¥–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç Ruff!
def process_data(data):
    return data * 2
```

Ruff –ø–æ–¥—Å–∫–∞–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏:
```python
# –ü—Ä–∞–≤–∏–ª—å–Ω–æ!
def process_data(data: list) -> list:
    return [item * 2 for item in data]
```

### üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å pre-commit:

–ö–æ–≥–¥–∞ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ `git commit`, pre-commit –∑–∞–ø—É—Å—Ç–∏—Ç Ruff, –∫–æ—Ç–æ—Ä—ã–π:
1. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç —Å—Ç–∏–ª—å –∫–æ–¥–∞ (PEP 8)
2. ‚úÖ –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
3. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤
4. ‚úÖ –ò—Å–ø—Ä–∞–≤–∏—Ç –º–Ω–æ–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

–≠—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –æ—Å–≤–æ–∏—Ç—å –≤ —Ä–∞–º–∫–∞—Ö MLOps! üöÄ
